name: test-and-publish

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install MongoDB
      run: sudo apt-get install -y mongodb
    - name: Set up as module
      run: |
        npm install faker puppeteer@2.1.1 @userdashboard/dashboard --no-save
        npm install -g mocha
        mkdir -p node_modules/@userdashboard/storage-mongodb
        rm -rf node_modules/@userdashboard/storage-mongodb/src
        cp *.js node_modules/@userdashboard/storage-mongodb
        cp -R src/ node_modules/@userdashboard/storage-mongodb/src/
    - name: Test unencrypted MongoDB storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js1"
      env:
        NODE_ENV: "testing"
        FAST_START: "true"
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-mongodb"
        MONGODB_URL: "mongodb://localhost:27017"
        MONGODB_DATABASE: "dashboard"
        GENERATE_SITEMAP_TXT: "false"
        GENERATE_API_TXT: "false"
    - name: Test encrypted MongoDB storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js1"
      env:
        NODE_ENV: "testing"
        FAST_START: "true"
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-mongodb"
        MONGODB_URL: "mongodb://localhost:27017"
        MONGODB_DATABASE: "dashboard"
        GENERATE_SITEMAP_TXT: "false"
        GENERATE_API_TXT: "false"
        ENCRYPTION_SECRET: "12345678901234567890123456789012"
        ENCRYPTION_SECRET_IV: "1234123412341234"
    - name: Publish new version to Github
      run: |
        pwd
        ls
        git config --global user.name "${{ secrets.NAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
        echo increasing npm version
        echo `cat package.json`
        npm version patch
        echo npm version has increased
        echo `cat package.json`
        git add package.json
        git commit -m "Automatically regenerated against current version"
        git push github HEAD:${GITHUB_REF}
    - name: Publish to NPM
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_TOKEN }}